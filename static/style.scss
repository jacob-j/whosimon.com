/// Stroke font-character
/// @param  {Integer} $stroke - Stroke width
/// @param  {Color}   $color  - Stroke color
/// @return {List}            - text-shadow list
@function stroke($stroke, $color) {
  $shadow: ();
  $from: $stroke*-1;
  @for $i from $from through $stroke {
   @for $j from $from through $stroke {
      $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);
    }
  }
  @return $shadow;
}
/// Stroke font-character
/// @param  {Integer} $stroke - Stroke width
/// @param  {Color}   $color  - Stroke color
/// @return {Style}           - text-shadow
@mixin stroke($stroke, $color) {
  text-shadow: stroke($stroke, $color);
}

html, body {
  margin: 0;
  font-family: "Roboto", Sans-serif;
}
* {
  box-sizing: border-box;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.page {
  padding: 4vw 20px;
  position: relative;
}

.background {
  width: 100%;
  height: 100%;
  position: absolute;
  background: #000;
  top: 0;
  left: 0;
  opacity: 1;
  animation: fadeOut 4s 3s forwards;
}

.headline {
  padding: 0 0 8vh 0;
  z-index: 2;
  position: relative;

  @media only screen and (max-width: 700px){
    padding: 8vh 0 4vh;
  }

  > *:nth-child(1){
    span {
      &:nth-child(1){
        opacity: 0;
        animation: fadeIn 4s 0s forwards;
      }
      &:nth-child(2){
        opacity: 0;
        animation: fadeIn 4s 1s forwards;
      }
    }
  }
  > *:nth-child(2){
    opacity: 0;
    animation: fadeIn 4s 3s forwards;
  }
  > *:nth-child(3){
    opacity: 0;
    animation: fadeIn 4s 5s forwards;
  }

  h1 {
    font-size: calc(32px + 6vw);
    margin: 0;
    font-weight: 900;
    letter-spacing: -0.05em;
    line-height: 1;
    text-align: center;

    @media only screen and (max-width: 700px){
      font-size: calc(32px + 4vw);
    }

    &.outline {
      color: #FFF;
      letter-spacing: 0;
      margin-bottom: 5vh;
      @include stroke(2, #000000);

      @media only screen and (max-width: 700px){
        @include stroke(1, #000000);
      }
    }
    &:not(.outline){
      @media only screen and (max-width: 700px){
        font-size: calc(32px + 6vw);
      }
    }

  }
  h2 {
    font-size: calc(18px + 1vw);
    text-align: center;
    margin-top: 4vh;
    opacity: 0;
  }
}

.info {
  opacity: 0;
  animation: fadeIn 2s 7s forwards;
  z-index: 2;
  position: relative;
  &__content {
    width: 100%;
    max-width: 1200px;
    display: flex;
    margin: auto;
    border: 2px solid #000;

    @media only screen and (max-width: 700px){
      flex-direction: column;
    }

    &__biography {
      width: 100%;
      padding: 32px;

      p {
        font-size: 18px;
        line-height: 1.6;
        &:first-of-type {
          margin-top: 0;
        }
        &:last-of-type {
          margin-bottom: 0;
        }
      }
    }
    &__links {
      width: 100%;
      max-width: 30%;
      flex-shrink: 0;
      display: flex;
      flex-direction: column;
      border-left: 2px solid #000;

      @media only screen and (max-width: 700px){
        flex-direction: row;
        max-width: none;
        border-top: 2px solid #000;
        border-left: 0;
      }
      @media only screen and (max-width: 400px){
        flex-wrap: wrap;
      }

      a {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: #000;
        text-decoration: none;

        &:hover {
          color: #FFF;
          background: #000;
        }

        @media only screen and (max-width: 700px){
          padding: 20px 0;
          font-size: 18px;
        }

        &:not(:last-of-type){
          border-bottom: 2px solid #000;

          @media only screen and (max-width: 700px) and (min-width: 400px){
            border-bottom: 0;
            border-right: 2px solid #000;
          }
        }
      }
    }
  }
}